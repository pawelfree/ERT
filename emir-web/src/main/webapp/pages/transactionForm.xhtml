<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<ui:composition   template="/templates/main.xhtml"
                  xmlns="http://www.w3.org/1999/xhtml"
                  xmlns:h="http://java.sun.com/jsf/html"
                  xmlns:f="http://java.sun.com/jsf/core"
                  xmlns:ui="http://java.sun.com/jsf/facelets"
                  xmlns:p="http://primefaces.org/ui"
                  xmlns:emir="http://pl.pd/emir">
    <ui:define name="pageTitle">
        <h:outputLabel value="#{msgs['register.transactionForm.new']}" rendered="#{transactionFormBean.formType eq 'New'}"/>
        <h:outputLabel value="#{msgs['register.transactionForm.edit']}" rendered="#{transactionFormBean.formType eq 'Edit' and not transactionFormBean.mutation and not transactionFormBean.valuation}"/>
        <h:outputLabel value="#{msgs['register.transactionForm.details']}" rendered="#{transactionFormBean.formType eq 'View'}"/>
        <h:outputLabel value="#{msgs['register.transactionForm.mutation']}" rendered="#{transactionFormBean.formType eq 'Edit' and transactionFormBean.mutation}"/>
        <h:outputLabel value="#{msgs['register.transactionForm.valuation']}" rendered="#{transactionFormBean.formType eq 'Edit' and transactionFormBean.valuation}"/>
    </ui:define>
    <ui:define name="body">
        <h:form id="form1">
            <p:panelGrid  columns="5">
                <p:commandButton value="#{msgs['button.save']}"
                                 id="buttonSave"
                                 ajax="true"
                                 action="#{transactionFormBean.saveStep1()}"
                                 update="#{applicationBean.facesMessagesFormID} tv:transactionBaseDataPg1 tv:valuationPg1 tv:protectionPg1 tv:generalDataPg1 tv:contractTypePg1 tv:derivativesPg1 confirmDialogError"
                                 disabled="#{transactionFormBean.formType == 'View' }"
                                 immediate="false"
                                 />
                <p:commandButton type="cancel" immediate="true" value="#{msgs['button.cancel']}"
                                 oncomplete="PF('confirmDialogCancel').show(); "
                                 rendered="#{transactionFormBean.formType == 'New' }"/>
                <p:commandButton type="cancel"  immediate="true" value="#{msgs['button.cancel']}"
                                 action="#{transactionListBean.getAction()}"
                                 rendered="#{transactionFormBean.formType == 'View' }"/>
                <p:commandButton type="cancel"  immediate="true" value="#{msgs['button.cancel']}"
                                 action="#{transactionListBean.getAction()}" ajax="false"
                                 rendered="#{transactionFormBean.formType == 'Edit' }"/>
                <p:commandButton type="cancel"  immediate="true" ajax="false" value="#{msgs['button.details']}" update="buttonSave"
                                 action="#{transactionFormBean.changeContext('View')}"
                                 rendered="#{transactionFormBean.formType == 'Edit'}"/>
                <p:commandButton type="cancel"  immediate="true" ajax="false" value="#{msgs['button.edit']}" update="buttonSave"
                                 action="#{transactionFormBean.changeContext('Edit')}"
                                 rendered="#{transactionFormBean.formType == 'View' and transactionFormBean.isEditingPossible()}"/>
                <p:commandButton immediate="true" ajax="true" value="#{msgs['button.addMutation']}"
                                 update="buttonSave confirmDialogAddMutation"
                                 rendered="#{transactionFormBean.formType == 'View'}"
                                 action="#{transactionFormBean.addMutationStep1()}"
                                 disabled="#{transactionFormBean.existsYoungerMutation
                                             or (not transactionFormBean.isAddingMutationPossible())
                                             or (not transactionFormBean.isAddingMutationCheckDate())}"/>
                <p:commandButton immediate="true" ajax="true" value="#{msgs['button.addValuation']}"
                                 update="buttonSave confirmDialogAddValuation" 
                                 rendered="#{transactionFormBean.formType == 'View'}"
                                 action="#{transactionFormBean.addValuationStep1()}" 
                                 disabled="#{transactionFormBean.existsYoungerMutation
                                             or (not transactionFormBean.addingValuationPossible)
                                             or (not transactionFormBean.addingValuationCheckDate)}"                                 
                                 />
            </p:panelGrid>
            <p:tabView id="tv" widgetVar="tv" cache="false">
                <p:tab title="#{msgs['register.transactionForm.tabs.transactionBaseData']}">
                    <p:panel toggleable="true">
                        <f:facet name="header">#{msgs['register.transactionForm.basicData.section.generalData']}</f:facet>
                        <p:panelGrid columns="2" id="transactionBaseDataPg1">
                            <ui:remove><!--WewnÄ™trzny identyfikator transakcji--></ui:remove>
                            <emir:labeledOutput id="originalIdOutput" value="#{transactionFormBean.entity.originalId}"
                                                label="#{msgs['register.transactionForm.basicData.originalId']}"
                                                rendered="#{transactionFormBean.formType == 'View' or transactionFormBean.formType == 'Edit'}" />
                            <emir:inputText id="originalIdInput" maxlength="50" required="true"
                                            value="#{transactionFormBean.entity.originalId}"
                                            label="#{msgs['register.transactionForm.basicData.originalId']}"
                                            info="#{msgs['register.transactionForm.tabs.transactionBaseData']}->#{msgs['register.transactionForm.basicData.section.generalData']}->#{msgs['register.transactionForm.basicData.originalId']}"
                                            rendered="#{transactionFormBean.formType == 'New'}"
                                            readonly="#{transactionFormBean.mutation}"/>

                            <ui:remove><!--Data transakcji--></ui:remove>
                            <emir:labeledOutput id="transactionDateOutput"
                                                value="#{transactionFormBean.entity.transactionDate}"
                                                label="#{msgs['register.transactionForm.basicData.transactionDate']}"
                                                rendered="#{not transactionFormBean.mutation and not transactionFormBean.valuation}">
                                <f:convertDateTime pattern="yyyy-MM-dd"/>
                            </emir:labeledOutput>
                            <emir:inputDate id="transactionDateOutputForMutation"
                                            required="#{true}"
                                            maxdate="#{applicationBean.today}"
                                            mindate="#{transactionFormBean.entity.transactionDate}"
                                            value="#{transactionFormBean.entity.transactionDate}"
                                            label="#{msgs['register.transactionForm.basicData.transactionDate']}"
                                            info="#{msgs['register.transactionForm.tabs.transactionBaseData']}->#{msgs['register.transactionForm.basicData.section.generalData']}->#{msgs['register.transactionForm.basicData.confirmed']}"
                                            rendered="#{transactionFormBean.formType == 'Edit' and (transactionFormBean.mutation or transactionFormBean.valuation)}">
                                <p:ajax event="change" update="transactionDateOutputForMutation terminationDateInput" partialSubmit="true"/>
                            </emir:inputDate>                            
                            <ui:remove><!--Identyfikator transakcji--></ui:remove>
                            <emir:labeledOutput id="sourceTransIdOutput" value="#{transactionFormBean.entity.transactionDetails.sourceTransId}"
                                                label="#{msgs['register.transactionForm.basicData.sourceTransId']}"
                                                rendered="#{transactionFormBean.formType == 'View' or transactionFormBean.formType == 'Edit'}" />
                            <emir:inputText id="sourceTransIdInput"
                                            rendered="#{transactionFormBean.formType == 'New'}"
                                            maxlength="52" required="true"
                                            value="#{transactionFormBean.entity.transactionDetails.sourceTransId}"
                                            label="#{msgs['register.transactionForm.basicData.sourceTransId']}"
                                            info="#{msgs['register.transactionForm.tabs.transactionBaseData']}->#{msgs['register.transactionForm.basicData.section.generalData']}->#{msgs['register.transactionForm.basicData.sourceTransId']}"
                                            readonly="#{transactionFormBean.mutation}"
                                            style="width: 250px;" />

                            <ui:remove><!--Poprzedni kod identyfikacyjny transakcji--></ui:remove>
                            <emir:labeledOutput id="previousSourceTransId" value="#{transactionFormBean.entity.transactionDetails.previousSourceTransId}"
                                                label="#{msgs['register.transactionForm.basicData.previousSourceTransId']}"
                                                rendered="#{transactionFormBean.formType == 'View' or transactionFormBean.valuation}" />
                            <emir:inputText id="previousSourceTransIdInput"
                                            rendered="#{(transactionFormBean.formType == 'New' or transactionFormBean.formType == 'Edit') and not transactionFormBean.valuation}"
                                            maxlength="52"
                                            required="false"
                                            value="#{transactionFormBean.entity.transactionDetails.previousSourceTransId}"
                                            label="#{msgs['register.transactionForm.basicData.previousSourceTransId']}"
                                            info="#{msgs['register.transactionForm.tabs.transactionBaseData']}->#{msgs['register.transactionForm.basicData.section.generalData']}->#{msgs['register.transactionForm.basicData.previousSourceTransId']}"
                                            />

                            <ui:remove><!--Numer referencyjny transakcji--></ui:remove>
                            <emir:labeledOutput id="sourceTransRefNrOutput" value="#{transactionFormBean.entity.transactionDetails.sourceTransRefNr}" 
                                                label="#{msgs['register.transactionForm.basicData.sourceTransRefNr']}" 
                                                rendered="#{transactionFormBean.formType == 'View' or transactionFormBean.valuation}" />
                            <emir:inputText id="sourceTransRefNrInput" 
                                            rendered="#{not (transactionFormBean.formType == 'View') and not transactionFormBean.valuation}" 
                                            maxlength="40"
                                            value="#{transactionFormBean.entity.transactionDetails.sourceTransRefNr}"
                                            label="#{msgs['register.transactionForm.basicData.sourceTransRefNr']}"
                                            info="#{msgs['register.transactionForm.tabs.transactionBaseData']}->#{msgs['register.transactionForm.basicData.section.generalData']}->#{msgs['register.transactionForm.basicData.sourceTransRefNr']}"
                                            />

                            <ui:remove><!--Identyfikator klienta--></ui:remove>
                            <emir:labeledOutput id="originalClientIdOutput" value="#{transactionFormBean.entity.client.originalId}" 
                                                label="#{msgs['register.transactionForm.basicData.originalClientId']}" 
                                                rendered="#{transactionFormBean.formType == 'View' or transactionFormBean.valuation}" />
                            <emir:inputSelect id="originalClientIdInput"
                                              label="#{msgs['register.transactionForm.basicData.originalClientId']}"
                                              value="#{transactionFormBean.entity.client.originalId}"
                                              rendered="#{not (transactionFormBean.formType == 'View') and not transactionFormBean.valuation}"
                                              info="#{msgs['register.transactionForm.tabs.transactionBaseData']}->#{msgs['register.transactionForm.basicData.section.generalData']}->#{msgs['register.transactionForm.basicData.originalClientId']}" 
                                              update="clientDataBeneficiaryCodeInput clientDataBeneficiaryCodeTypeInput clientDataTransactionTypeInput"
                                              required="true"
                                              changeListener="#{transactionFormBean.clientChanged()}"
                                              style="width:400px !important;"
                                              allowEmpty="true">
                                <f:selectItems itemLabel="#{option.getOriginalId()} | #{option.getClientName()}" 
                                               value="#{transactionFormBean.allClients}" 
                                               var="option"                                                
                                               itemValue="#{option.getOriginalId()}"
                                               />
                            </emir:inputSelect>

                            <ui:remove><!--Typ danych--></ui:remove>
                            <emir:labeledOutput id="dataTypeOutput" value="#{msgs[transactionFormBean.entity.dataType.msgKey]}" 
                                                label="#{msgs['register.transactionForm.basicData.dataType']}" 
                                                rendered="#{transactionFormBean.formType == 'View' or transactionFormBean.valuation}" />

                            <ui:remove><!--Statusy--></ui:remove>
                            <emir:labeledOutput id="processingStatusOutput" value="#{msgs[transactionFormBean.entity.processingStatus.msgKey]}" 
                                                label="#{msgs['register.transactionForm.basicData.processingStatus']}" 
                                                rendered="#{transactionFormBean.formType == 'View' or transactionFormBean.valuation}"/>
                            <emir:labeledOutput id="validationStatusOutput" value="#{msgs[transactionFormBean.entity.validationStatus.msgKey]}" 
                                                label="#{msgs['register.transactionForm.basicData.validationStatus']}" 
                                                rendered="#{transactionFormBean.formType == 'View' or transactionFormBean.valuation}"/>

                            <ui:remove><!--Strona transakcji--></ui:remove>
                            <emir:labeledOutput id="transactionPartyOutput" value="#{transactionFormBean.entity.transactionParty}" 
                                                label="#{msgs['register.transactionForm.basicData.transactionParty']}" 
                                                rendered="#{transactionFormBean.formType == 'View' or transactionFormBean.valuation}" />
                            <emir:inputSelect id="transactionPartyInput" rendered="#{not (transactionFormBean.formType == 'View') and not transactionFormBean.valuation}"
                                              value="#{transactionFormBean.entity.transactionParty}"
                                              label="#{msgs['register.transactionForm.basicData.transactionParty']}"
                                              info="#{msgs['register.transactionForm.tabs.transactionBaseData']}->#{msgs['register.transactionForm.basicData.section.generalData']}->#{msgs['register.transactionForm.basicData.transactionParty']}"
                                              allowEmpty="true" required="true">
                                <f:selectItems itemLabel="#{option}" value="#{transactionFormBean.importTransactionParty}" var="option" itemValue="#{option}" />
                            </emir:inputSelect>

                            <ui:remove><!--Transakcja potwierdzona--></ui:remove>
                            <emir:labeledOutput id="confirmedOutput" value="#{msgs[transactionFormBean.entity.getConfirmed().msgKey]}" 
                                                label="#{msgs['register.transactionForm.basicData.confirmed']}" 
                                                rendered="#{transactionFormBean.formType == 'View' or transactionFormBean.valuation}"  />
                            <emir:inputSelect id="confirmedInput" rendered="#{not (transactionFormBean.formType == 'View') and not transactionFormBean.valuation}"
                                              value="#{transactionFormBean.confirmedStatus}"
                                              label="#{msgs['register.transactionForm.basicData.confirmed']}"
                                              info="#{msgs['register.transactionForm.tabs.transactionBaseData']}->#{msgs['register.transactionForm.basicData.section.generalData']}->#{msgs['register.transactionForm.basicData.confirmed']}"
                                              allowEmpty="false"
                                              disabled="true">
                                <f:selectItem itemValue="EMPTY" itemLabel="#{msgs['ConfirmedStatus.EMPTY']}"/>
                                <f:selectItem itemValue="CONFIRMED" itemLabel="#{msgs['ConfirmedStatus.CONFIRMED']}"/>
                                <f:selectItem itemValue="UNCONFIRMED" itemLabel="#{msgs['ConfirmedStatus.UNCONFIRMED']}"/>
                            </emir:inputSelect>

                            <ui:remove><!--Wersja--></ui:remove>
                            <emir:labeledOutput id="extractVersionOutput" value="#{transactionFormBean.entity.extractVersion}" label="#{msgs['register.transactionForm.basicData.extractVersion']}" rendered="#{transactionFormBean.formType == 'View' and transactionFormBean.showVersion}" />

                            <ui:remove><!--Dodatkowy opis transakcji - tylko dla mutacji--></ui:remove>
                            <emir:labeledOutput id="additionalTransactionDetails" value="#{transactionFormBean.entity.getActionTypeDetails()}"
                                                label="#{msgs['register.transactionForm.basicData.actionTypeDetails']}"
                                                rendered="#{transactionFormBean.formType == 'View' and transactionFormBean.entity.getActionTypeDetails() ne null}" />
                            <emir:inputText id="additionalTransactionDetailsInput" maxlength="50" required="falce"
                                            value="#{transactionFormBean.entity.actionTypeDetails}"
                                            label="#{msgs['register.transactionForm.basicData.actionTypeDetails']}"
                                            info="#{msgs['register.transactionForm.tabs.transactionBaseData']}->#{msgs['register.transactionForm.basicData.section.generalData']}->#{msgs['register.transactionForm.basicData.actionTypeDetails']}"
                                            rendered="#{transactionFormBean.formType == 'Edit' and (transactionFormBean.mutation or transactionFormBean.entity.getActionTypeDetails() ne null)}"
                                            style="width:400px;"
                                            />
                        </p:panelGrid>
                    </p:panel>
                </p:tab>
                <p:tab title="#{msgs['register.transactionForm.tabs.valuation']}" id="tValuation">
                    <h:panelGroup id="valuationPg1">
                        <p:panel toggleable="true">
                            <f:facet name="header">#{msgs['register.transactionForm.valuation.section.valuation']}</f:facet>
                            <p:panelGrid columns="2">
                                <ui:remove><!--Waluta wyceny--></ui:remove>
                                <emir:labeledOutput id="valuationCurrencyCodeOutput" value="#{transactionFormBean.entity.valuation.valuationData.currencyCode}" label="#{msgs['register.transactionForm.valuation.currencyCode']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect filter="true" id="valuationCurrencyCodeInput_inputSelect" allowEmpty="true"
                                                  required="#{(transactionFormBean.entity.valuation.valuationData.currencyCode ne null or
                                                              transactionFormBean.entity.valuation.valuationData.valuationDate ne null or
                                                              transactionFormBean.entity.valuation.valuationData.valuationType ne null or
                                                              transactionFormBean.entity.valuation.valuationData.amount ne null or
                                                              transactionFormBean.entity.valuation.valuationData.clientAmount ne null) or transactionFormBean.getRequiredValuaProtectInputs()}"
                                                  rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.valuation.valuationData.currencyCode}"
                                                  label="#{msgs['register.transactionForm.valuation.currencyCode']}"
                                                  info="#{msgs['register.transactionForm.tabs.valuation']}->#{msgs['register.transactionForm.valuation.section.valuation']}->#{msgs['register.transactionForm.valuation.currencyCode']}" >
                                    <f:selectItems value="#{transactionFormBean.importCurrencyCode}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                    <p:ajax event="change"  partialSubmit="true"/>
                                </emir:inputSelect>
                                <ui:remove><!--Data i godzina wyceny--></ui:remove>
                                <emir:labeledOutput id="valuationDateOutput" value="#{transactionFormBean.entity.valuation.valuationData.valuationDate}" label="#{msgs['register.transactionForm.valuation.valuationDate']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:convertDateTime pattern="#{applicationBean.dateTimePattern}"/>
                                </emir:labeledOutput>
                                <emir:inputDate id="valuationDateInput"
                                                required="#{(transactionFormBean.entity.valuation.valuationData.currencyCode ne null or
                                                            transactionFormBean.entity.valuation.valuationData.valuationDate ne null or
                                                            transactionFormBean.entity.valuation.valuationData.valuationType ne null or
                                                            transactionFormBean.entity.valuation.valuationData.amount ne null or
                                                            transactionFormBean.entity.valuation.valuationData.clientAmount ne null) or transactionFormBean.getRequiredValuaProtectInputs()}"
                                                value="#{transactionFormBean.entity.valuation.valuationData.valuationDate}"
                                                label="#{msgs['register.transactionForm.valuation.valuationDate']}"
                                                info="#{msgs['register.transactionForm.tabs.valuation']}->#{msgs['register.transactionForm.valuation.section.valuation']}->#{msgs['register.transactionForm.valuation.valuationDate']}"
                                                pattern="#{applicationBean.dateTimePattern}" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                mindate="#{msgs['commons.utilsClient.minimalData']}">
                                    <p:ajax event="change"  partialSubmit="true"  />
                                </emir:inputDate>
                                <ui:remove><!--Rodzaj wyceny--></ui:remove>
                                <emir:labeledOutput id="valuationTypeOutput" value="#{transactionFormBean.entity.valuation.valuationData.valuationType}" label="#{msgs['register.transactionForm.valuation.valuationType']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect filter="true" id="valuationTypeInput" allowEmpty="true"
                                                  required="#{(transactionFormBean.entity.valuation.valuationData.currencyCode ne null or
                                                              transactionFormBean.entity.valuation.valuationData.valuationDate ne null or
                                                              transactionFormBean.entity.valuation.valuationData.valuationType ne null or
                                                              transactionFormBean.entity.valuation.valuationData.amount ne null or
                                                              transactionFormBean.entity.valuation.valuationData.clientAmount ne null) or transactionFormBean.getRequiredValuaProtectInputs()}"
                                                  rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.valuation.valuationData.valuationType}"
                                                  label="#{msgs['register.transactionForm.valuation.valuationType']}"
                                                  info="#{msgs['register.transactionForm.tabs.valuation']}->#{msgs['register.transactionForm.valuation.section.valuation']}->#{msgs['register.transactionForm.valuation.valuationType']}" >
                                    <f:selectItems value="#{transactionFormBean.importValuationType}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                    <p:ajax event="change" partialSubmit="true"/>
                                </emir:inputSelect>

                                <ui:remove><!--WartoÅ›Ä‡ wyceny instytucji raportujÄ…cej--></ui:remove>
                                <emir:labeledOutput id="valuationAmountOutput" value="#{transactionFormBean.entity.valuation.valuationData.amount}" label="#{msgs['register.transactionForm.valuation.amount']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="valuationAmountInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                required="#{(transactionFormBean.entity.valuation.valuationData.currencyCode ne null or
                                                            transactionFormBean.entity.valuation.valuationData.valuationDate ne null or
                                                            transactionFormBean.entity.valuation.valuationData.valuationType ne null or
                                                            transactionFormBean.entity.valuation.valuationData.amount ne null or
                                                            transactionFormBean.entity.valuation.valuationData.clientAmount ne null) or transactionFormBean.getRequiredValuaProtectInputs()}"
                                                value="#{transactionFormBean.entity.valuation.valuationData.amount}"
                                                label="#{msgs['register.transactionForm.valuation.amount']}"
                                                info="#{msgs['register.transactionForm.tabs.valuation']}->#{msgs['register.transactionForm.valuation.section.valuation']}->#{msgs['register.transactionForm.valuation.amount']}"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                    <p:ajax event="change" partialSubmit="true"/>
                                </emir:inputText>

                                <ui:remove><!--WartoÅ›Ä‡ wyceny kontrahenta--></ui:remove>
                                <emir:labeledOutput id="valuationAmountClientOutput" value="#{transactionFormBean.entity.valuation.valuationData.clientAmount}" label="#{msgs['register.transactionForm.valuation.amountClient']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="valuationamountClientInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.valuation.valuationData.clientAmount}"
                                                label="#{msgs['register.transactionForm.valuation.amountClient']}"
                                                info="#{msgs['register.transactionForm.tabs.valuation']}->#{msgs['register.transactionForm.valuation.section.valuation']}->#{msgs['register.transactionForm.valuation.amountClient']}"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                    <p:ajax event="change"  partialSubmit="true"/>
                                </emir:inputText>
                            </p:panelGrid>
                        </p:panel>
                    </h:panelGroup>
                </p:tab>
                <p:tab title="#{msgs['register.transactionForm.tabs.protection']}" id="tProtection">
                    <h:panelGroup id="protectionPg1">
                        <p:panel toggleable="true">
                            <f:facet name="header">#{msgs['register.transactionForm.protection.section.protection']}</f:facet>
                            <p:panelGrid columns="2">
                                <ui:remove><!--Dokonano zabezpieczenia--></ui:remove>
                                <emir:labeledOutput id="protectionOutput" value="#{transactionFormBean.entity.protection.protection}" label="#{msgs['register.transactionForm.protection.protection']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect filter="true" id="protectionInput"
                                                  rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.protection.protection}"
                                                  allowEmpty="true"
                                                  required="#{(transactionFormBean.entity.protection.walletProtection ne null or
                                                              not empty param['form1:tv:walletIdInput_inputText'] or
                                                              transactionFormBean.entity.protection.currencyCode ne null or
                                                              transactionFormBean.entity.protection.amount ne null or
                                                              transactionFormBean.entity.protection.clientAmount ne null) or transactionFormBean.getRequiredValuaProtectInputs()}"
                                                  label="#{msgs['register.transactionForm.protection.protection']}"
                                                  info="#{msgs['register.transactionForm.tabs.protection']}->#{msgs['register.transactionForm.protection.section.protection']}->#{msgs['register.transactionForm.protection.protection']}" >
                                    <f:selectItems value="#{transactionFormBean.importDoProtection}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                    <p:ajax event="change" update="protectionPg1" partialSubmit="true"/>
                                </emir:inputSelect>

                                <ui:remove><!--Dokonano zabezpieczenia na poziomie portfela--></ui:remove>
                                <emir:labeledOutput id="walletProtectionOutput" value="#{transactionFormBean.entity.protection.walletProtection}" label="#{msgs['register.transactionForm.protection.walletProtection']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect filter="true"
                                                  id="walletProtectionInput"
                                                  rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.protection.walletProtection}" allowEmpty="true"
                                                  label="#{msgs['register.transactionForm.protection.walletProtection']}"
                                                  info="#{msgs['register.transactionForm.tabs.protection']}->#{msgs['register.transactionForm.protection.section.protection']}->#{msgs['register.transactionForm.protection.walletProtection']}" >
                                    <f:selectItems value="#{transactionFormBean.importYesNo}" var="option" itemLabel="#{msgs[option.msgKey]}" itemValue="#{option}"/>
                                    <p:ajax event="change" update="protectionPg1" partialSubmit="true"/>
                                </emir:inputSelect>


                                <ui:remove><!--Kod portfela--></ui:remove>
                                <emir:labeledOutput id="walletIdOutput" value="#{transactionFormBean.entity.protection.walletId}" label="#{msgs['register.transactionForm.protection.walletId']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="walletIdInput"
                                                rendered="#{not (transactionFormBean.formType == 'View')}" maxlength="35"
                                                value="#{transactionFormBean.entity.protection.walletId}"
                                                label="#{msgs['register.transactionForm.protection.walletId']}"
                                                info="#{msgs['register.transactionForm.tabs.protection']}->#{msgs['register.transactionForm.protection.section.protection']}->#{msgs['register.transactionForm.protection.walletId']}"  >
                                    <p:ajax event="change" update="protectionPg1" partialSubmit="true"/>
                                </emir:inputText>

                                <ui:remove><!--Waluta zabezpiecenia--></ui:remove>
                                <emir:labeledOutput id="protectionCurrencyCodeOutput" value="#{transactionFormBean.entity.protection.currencyCode}" label="#{msgs['register.transactionForm.protection.currencyCode']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect filter="true" id="protectionCurrencyCodeInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.protection.currencyCode}" allowEmpty="true"
                                                  label="#{msgs['register.transactionForm.protection.currencyCode']}"
                                                  info="#{msgs['register.transactionForm.tabs.protection']}->#{msgs['register.transactionForm.protection.section.protection']}->#{msgs['register.transactionForm.protection.currencyCode']}" >
                                    <f:selectItems value="#{transactionFormBean.importCurrencyCode}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                    <p:ajax event="change" update="protectionPg1" partialSubmit="true"/>
                                </emir:inputSelect>
                   
                                <ui:remove><!-- Wniesiony poczÄ…tkowy depozyt zabezpieczajÄ…cy --></ui:remove>
                                <emir:labeledOutput id="protectionInitlMrgnPstd" value="#{transactionFormBean.entity.protection.initlMrgnPstd}" label="Wniesiony poczÄ…tkowy depozyt zabezpieczajÄ…cy" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="protectionInitlMrgnPstdInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.protection.initlMrgnPstd}"
                                                label="Wniesiony poczÄ…tkowy depozyt zabezpieczajÄ…cy"
                                                info="#{msgs['register.transactionForm.tabs.protection']}->#{msgs['register.transactionForm.protection.section.protection']}->Wniesiony poczÄ…tkowy depozyt zabezpieczajÄ…cy"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                    <p:ajax event="change" update="protectionPg1" partialSubmit="true"/>
                                </emir:inputText>

                                <ui:remove><!-- Otrzymany poczÄ…tkowy depozyt zabezpieczajÄ…cy --></ui:remove>
                                <emir:labeledOutput id="protectionInitlMrgnRcvd" value="#{transactionFormBean.entity.protection.initlMrgnRcvd}" label="Otrzymany poczÄ…tkowy depozyt zabezpieczajÄ…cy" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="protectionInitlMrgnRcvdInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.protection.initlMrgnRcvd}"
                                                label="Otrzymany poczÄ…tkowy depozyt zabezpieczajÄ…cy"
                                                info="#{msgs['register.transactionForm.tabs.protection']}->#{msgs['register.transactionForm.protection.section.protection']}->Otrzymany poczÄ…tkowy depozyt zabezpieczajÄ…cy"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                    <p:ajax event="change" update="protectionPg1" partialSubmit="true"/>
                                </emir:inputText>
                                <ui:remove><!-- Wniesiony zmienny depozyt zabezpieczajÄ…cy --></ui:remove>
                                <emir:labeledOutput id="protectionVartnMrgnPstd" value="#{transactionFormBean.entity.protection.vartnMrgnPstd}" label="Wniesiony zmienny depozyt zabezpieczajÄ…cy" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="protectionVartnMrgnPstdInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.protection.vartnMrgnPstd}"
                                                label="Wniesiony zmienny depozyt zabezpieczajÄ…cy"
                                                info="#{msgs['register.transactionForm.tabs.protection']}->#{msgs['register.transactionForm.protection.section.protection']}->Wniesiony zmienny depozyt zabezpieczajÄ…cy"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                    <p:ajax event="change" update="protectionPg1" partialSubmit="true"/>
                                </emir:inputText>

                                <ui:remove><!-- Otrzymany zmienny depozyt zabezpieczajÄ…cy --></ui:remove>
                                <emir:labeledOutput id="protectionVartnMrgnRcvd" value="#{transactionFormBean.entity.protection.vartnMrgnRcvd}" label="Otrzymany zmienny depozyt zabezpieczajÄ…cy" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="protectionVartnMrgnRcvdInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.protection.vartnMrgnRcvd}"
                                                label="Otrzymany zmienny depozyt zabezpieczajÄ…cy"
                                                info="#{msgs['register.transactionForm.tabs.protection']}->#{msgs['register.transactionForm.protection.section.protection']}->Otrzymany zmienny depozyt zabezpieczajÄ…cy"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                    <p:ajax event="change" update="protectionPg1" partialSubmit="true"/>
                                </emir:inputText>
                                <ui:remove><!-- NadwyÅ¼ka wniesionego zabezpieczenia --></ui:remove>
                                <emir:labeledOutput id="protectionXcssCollPstd" value="#{transactionFormBean.entity.protection.xcssCollPstd}" label="NadwyÅ¼ka wniesionego zabezpieczenia" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="protectionXcssCollPstdInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.protection.xcssCollPstd}"
                                                label="NadwyÅ¼ka wniesionego zabezpieczenia"
                                                info="#{msgs['register.transactionForm.tabs.protection']}->#{msgs['register.transactionForm.protection.section.protection']}->NadwyÅ¼ka wniesionego zabezpieczenia"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                    <p:ajax event="change" update="protectionPg1" partialSubmit="true"/>
                                </emir:inputText>

                                <ui:remove><!-- NadwyÅ¼ka otrzymanego zabezpieczenia --></ui:remove>
                                <emir:labeledOutput id="protectionXcssCollRcvd" value="#{transactionFormBean.entity.protection.xcssCollRcvd}" label="NadwyÅ¼ka otrzymanego zabezpieczenia" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="protectionXcssCollRcvdInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.protection.xcssCollRcvd}"
                                                label="NadwyÅ¼ka otrzymanego zabezpieczenia"
                                                info="#{msgs['register.transactionForm.tabs.protection']}->#{msgs['register.transactionForm.protection.section.protection']}->NadwyÅ¼ka otrzymanego zabezpieczenia"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                    <p:ajax event="change" update="protectionPg1" partialSubmit="true"/>
                                </emir:inputText>   
                                
                                <ui:remove><!--WartoÅ›Ä‡ zabezpieczenia instytucji raportujÄ…cej--></ui:remove>
                                <emir:labeledOutput id="protectionAmountOutput" value="#{transactionFormBean.entity.protection.amount}" label="#{msgs['register.transactionForm.protection.amount']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="protectionAmountInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.protection.amount}"
                                                label="#{msgs['register.transactionForm.protection.amount']}"
                                                info="#{msgs['register.transactionForm.tabs.protection']}->#{msgs['register.transactionForm.protection.section.protection']}->#{msgs['register.transactionForm.protection.amount']}"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                    <p:ajax event="change" update="protectionPg1" partialSubmit="true"/>
                                </emir:inputText>
                                <ui:remove><!--WartoÅ›Ä‡ zabezpieczenia kontrahenta--></ui:remove>
                                <emir:labeledOutput id="protectionAmountClientOutput" value="#{transactionFormBean.entity.protection.clientAmount}" label="#{msgs['register.transactionForm.protection.amountClient']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="protectionAmountClientInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.protection.clientAmount}"
                                                label="#{msgs['register.transactionForm.protection.amountClient']}"
                                                info="#{msgs['register.transactionForm.tabs.protection']}->#{msgs['register.transactionForm.protection.section.protection']}->#{msgs['register.transactionForm.protection.amountClient']}"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                    <p:ajax event="change" update="protectionPg1" partialSubmit="true"/>
                                </emir:inputText>
                            </p:panelGrid>
                        </p:panel>
                    </h:panelGroup>
                </p:tab>
                <p:tab title="#{msgs['register.transactionForm.tabs.generalData']}" id="tGeneralData" rendered="#{not transactionFormBean.valuation}">
                    <h:panelGroup id="generalDataPg1">
                        <p:panel toggleable="true">
                            <f:facet name="header">#{msgs['register.transactionForm.generalData.section.reportingInstitutionsData']}</f:facet>
                            <p:panel toggleable="true">
                                <f:facet name="header">#{msgs['register.transactionForm.generalData.subsection.brokerData']}</f:facet>
                                <p:panelGrid columns="2">
                                    <ui:remove><!--Kod identyfikacyjny--></ui:remove>
                                    <emir:labeledOutput id="client2DataIdCodeOutput" value="#{transactionFormBean.entity.client2Data.idCode}" label="#{msgs['register.transactionForm.generalData.idCode']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputText id="client2DataIdCodeInput" maxlength="50" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                    value="#{transactionFormBean.entity.client2Data.idCode}"
                                                    label="#{msgs['register.transactionForm.generalData.idCode']}"
                                                    required="#{transactionFormBean.entity.client2Data.idCodeType ne null}"
                                                    info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.reportingInstitutionsData']}->#{msgs['register.transactionForm.generalData.subsection.brokerData']}->#{msgs['register.transactionForm.generalData.idCode']}"
                                                    >
                                        <p:ajax event="change" update="client2DataIdCodeTypeInput"/>
                                    </emir:inputText>

                                    <ui:remove><!--Typ identyfikacyjny--></ui:remove>
                                    <emir:labeledOutput id="client2DataIdCodeTypeOutput" value="#{transactionFormBean.entity.client2Data.idCodeType}" label="#{msgs['register.transactionForm.generalData.idCodeType']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputSelect filter="true" id="client2DataIdCodeTypeInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                      value="#{transactionFormBean.entity.client2Data.idCodeType}"
                                                      label="#{msgs['register.transactionForm.generalData.idCodeType']}"
                                                      info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.reportingInstitutionsData']}->#{msgs['register.transactionForm.generalData.subsection.brokerData']}->#{msgs['register.transactionForm.generalData.idCodeType']}" allowEmpty="true"
                                                      required="#{not empty param['form1:tv:client2DataIdCodeInput_inputText']}">
                                        <f:selectItems value="#{transactionFormBean.importInstitutionIdType}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                        <p:ajax event="change" update="client2DataIdCodeInput"/>
                                    </emir:inputSelect>
                                </p:panelGrid>
                            </p:panel>
                            <p:panel toggleable="true">
                                <f:facet name="header">#{msgs['register.transactionForm.generalData.subsection.settlingInstitutionsData']}</f:facet>
                                <p:panelGrid columns="2">
                                    <ui:remove><!--Kod identyfikacyjny--></ui:remove>
                                    <emir:labeledOutput id="client2DataMemberIdOutput" value="#{transactionFormBean.entity.client2Data.memberId}" label="#{msgs['register.transactionForm.generalData.memberId']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputText id="client2DataMemberIdInput" maxlength="50" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                    value="#{transactionFormBean.entity.client2Data.memberId}"
                                                    label="#{msgs['register.transactionForm.generalData.memberId']}"
                                                    required="#{transactionFormBean.entity.client2Data.memberIdType ne null}"
                                                    info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.reportingInstitutionsData']}->#{msgs['register.transactionForm.generalData.subsection.settlingInstitutionsData']}->#{msgs['register.transactionForm.generalData.memberId']}">
                                        <p:ajax event="change" update="client2DataMemberIdTypeInput"/>
                                    </emir:inputText>

                                    <ui:remove><!--Typ identyfikacyjny--></ui:remove>
                                    <emir:labeledOutput id="client2DataMemberIdTypeOutput" value="#{transactionFormBean.entity.client2Data.memberIdType}" label="#{msgs['register.transactionForm.generalData.idCodeType']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputSelect filter="true" id="client2DataMemberIdTypeInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                      value="#{transactionFormBean.entity.client2Data.memberIdType}"
                                                      label="#{msgs['register.transactionForm.generalData.memberIdType']}"
                                                      info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.reportingInstitutionsData']}->#{msgs['register.transactionForm.generalData.subsection.settlingInstitutionsData']}->#{msgs['register.transactionForm.generalData.memberIdType']}" allowEmpty="true"
                                                      required="#{not empty param['form1:tv:client2DataMemberIdInput_inputText']}">
                                        <f:selectItems value="#{transactionFormBean.importInstitutionIdType}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                        <p:ajax event="change" update="client2DataMemberIdInput"/>
                                    </emir:inputSelect>

                                    <ui:remove><!--Identyfikator konta rozliczajÄ…cego--></ui:remove>
                                    <emir:labeledOutput id="client2DataSettlingAccoutOutput" value="#{transactionFormBean.entity.client2Data.settlingAccout}" label="#{msgs['register.transactionForm.generalData.settlingAccout']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputText id="client2DataSettlingAccoutInput"
                                                    rendered="#{not (transactionFormBean.formType == 'View')}"
                                                    value="#{transactionFormBean.entity.client2Data.settlingAccout}"
                                                    label="#{msgs['register.transactionForm.generalData.settlingAccout']}"
                                                    info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.reportingInstitutionsData']}->#{msgs['register.transactionForm.generalData.subsection.settlingInstitutionsData']}->#{msgs['register.transactionForm.generalData.settlingAccout']}"  />
                                </p:panelGrid>
                            </p:panel>
                            <p:panel toggleable="true">
                                <f:facet name="header">#{msgs['register.transactionForm.generalData.subsection.klientData']}</f:facet>
                                <p:panelGrid columns="2">
                                    <ui:remove><!--Kod identyfikacyjny--></ui:remove>
                                    <emir:labeledOutput id="client2DataBeneficiaryCodeOutput" value="#{transactionFormBean.entity.client2Data.beneficiaryCode}" label="#{msgs['register.transactionForm.generalData.beneficiaryCode']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputText id="client2DataBeneficiaryCodeInput" maxlength="50"
                                                    rendered="#{not (transactionFormBean.formType == 'View')}"
                                                    value="#{transactionFormBean.entity.client2Data.beneficiaryCode}"
                                                    label="#{msgs['register.transactionForm.generalData.beneficiaryCode']}"
                                                    required="#{(transactionFormBean.entity.client2Data.beneficiaryCodeType ne null) or transactionFormBean.entity.originalStatus eq 'N'}"
                                                    info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.reportingInstitutionsData']}->#{msgs['register.transactionForm.generalData.subsection.klientData']}->#{msgs['register.transactionForm.generalData.beneficiaryCode']}" >
                                        <p:ajax event="change" update="client2DataBeneficiaryCodeTypeInput"/>
                                    </emir:inputText>

                                    <ui:remove><!--Typ identyfikacyjny--></ui:remove>
                                    <emir:labeledOutput id="client2DataBeneficiaryCodeTypeOutput" value="#{transactionFormBean.entity.client2Data.beneficiaryCodeType}" label="#{msgs['register.transactionForm.generalData.beneficiaryCodeType']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputSelect filter="true" id="client2DataBeneficiaryCodeTypeInput"  allowEmpty="true"
                                                      rendered="#{not (transactionFormBean.formType == 'View')}"
                                                      value="#{transactionFormBean.entity.client2Data.beneficiaryCodeType}"
                                                      label="#{msgs['register.transactionForm.generalData.beneficiaryCodeType']}"
                                                      info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.reportingInstitutionsData']}->#{msgs['register.transactionForm.generalData.subsection.klientData']}->#{msgs['register.transactionForm.generalData.beneficiaryCodeType']}"
                                                      required="#{(not empty param['form1:tv:client2DataBeneficiaryCodeInput_inputText']) or transactionFormBean.entity.originalStatus eq 'N'}"
                                                      >
                                        <f:selectItems value="#{transactionFormBean.importInstitutionIdType}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                        <p:ajax event="change" update="client2DataBeneficiaryCodeInput"/>
                                    </emir:inputSelect>

                                    <ui:remove><!--Charakter, w jakim zawarto transakcjÄ™--></ui:remove>
                                    <emir:labeledOutput id="client2DataTransactionTypeOutput" value="#{transactionFormBean.entity.client2Data.transactionType}" label="#{msgs['register.transactionForm.generalData.transactionType']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputSelect filter="true" id="client2DataTransactionTypeInput"
                                                      required="#{transactionFormBean.entity.originalStatus eq 'N'}"
                                                      allowEmpty="true"
                                                      rendered="#{not (transactionFormBean.formType == 'View')}"
                                                      value="#{transactionFormBean.entity.client2Data.transactionType}"
                                                      label="#{msgs['register.transactionForm.generalData.transactionType']}"
                                                      info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.reportingInstitutionsData']}->#{msgs['register.transactionForm.generalData.subsection.klientData']}->#{msgs['register.transactionForm.generalData.transactionType']}" >
                                        <f:selectItems value="#{transactionFormBean.importTransactionType}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                    </emir:inputSelect>

                                    <ui:remove><!--BezpoÅ›redni zwiÄ…zek z dziaÅ‚alnoÅ›ciÄ… gospodarczÄ…--></ui:remove>
                                    <emir:labeledOutput id="client2DataCommercialActityOutput" value="#{transactionFormBean.entity.client2Data.commercialActity}" label="#{msgs['register.transactionForm.generalData.commercialActity']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputSelect filter="true" id="client2DataCommercialActityInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                      value="#{transactionFormBean.entity.client2Data.commercialActity}"
                                                      label="#{msgs['register.transactionForm.generalData.commercialActity']}"
                                                      info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.reportingInstitutionsData']}->#{msgs['register.transactionForm.generalData.subsection.klientData']}->#{msgs['register.transactionForm.generalData.commercialActity']}" allowEmpty="true">
                                        <f:selectItems value="#{transactionFormBean.importCommercialActity}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                    </emir:inputSelect>

                                    <ui:remove><!--PrÃ³g zwiÄ…zany z obowiÄ…zkiem rozliczania--></ui:remove>
                                    <emir:labeledOutput id="client2DataSettlementThresholdOutput" value="#{transactionFormBean.entity.client2Data.settlementThreshold}" label="#{msgs['register.transactionForm.generalData.settlementThreshold']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputSelect filter="true" id="client2DataSettlementThresholdInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                      value="#{transactionFormBean.entity.client2Data.settlementThreshold}"
                                                      label="#{msgs['register.transactionForm.generalData.settlementThreshold']}"
                                                      info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.reportingInstitutionsData']}->#{msgs['register.transactionForm.generalData.subsection.klientData']}->#{msgs['register.transactionForm.generalData.settlementThreshold']}" allowEmpty="true">
                                        <f:selectItems value="#{transactionFormBean.importSettlementThreshold}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                    </emir:inputSelect>

                                    <ui:remove><!--Kod portfela zabezpieczeÅ„--></ui:remove>
                                    <emir:labeledOutput id="client2DataCommWalletCodeOutput" value="#{transactionFormBean.entity.client2Data.commWalletCode}" label="#{msgs['register.transactionForm.generalData.commWalletCode']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputText id="client2DataCommWalletCodeInput" rendered="#{not (transactionFormBean.formType == 'View')}" maxlength="35"
                                                    value="#{transactionFormBean.entity.client2Data.commWalletCode}"
                                                    label="#{msgs['register.transactionForm.generalData.commWalletCode']}"
                                                    info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.reportingInstitutionsData']}->#{msgs['register.transactionForm.generalData.subsection.klientData']}->#{msgs['register.transactionForm.generalData.commWalletCode']}"  />
                                </p:panelGrid>
                            </p:panel>
                        </p:panel>
                    </h:panelGroup>
                    <h:panelGroup id="generalDataPg2">
                        <p:panel toggleable="true">
                            <f:facet name="header">#{msgs['register.transactionForm.generalData.section.klientData']}</f:facet>
                            <p:panel toggleable="true">
                                <f:facet name="header">#{msgs['register.transactionForm.generalData.subsection.brokerData']}</f:facet>
                                <p:panelGrid columns="2">
                                    <ui:remove><!--Kod identyfikacyjny--></ui:remove>
                                    <emir:labeledOutput id="clientDataIdCodeOutput" value="#{transactionFormBean.entity.clientData.idCode}" label="#{msgs['register.transactionForm.generalData.idCode']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputText id="clientDataIdCodeInput" maxlength="50" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                    value="#{transactionFormBean.entity.clientData.idCode}"
                                                    label="#{msgs['register.transactionForm.generalData.idCode']}"
                                                    required="#{transactionFormBean.entity.clientData.idCodeType ne null}"
                                                    info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.klientData']}->#{msgs['register.transactionForm.generalData.subsection.brokerData']}->#{msgs['register.transactionForm.generalData.idCode']}" >
                                        <p:ajax event="change" update="clientDataIdCodeTypeInput"/>
                                    </emir:inputText>

                                    <ui:remove><!--Typ identyfikacyjny--></ui:remove>
                                    <emir:labeledOutput id="clientDataIdCodeTypeOutput" value="#{transactionFormBean.entity.clientData.idCodeType}" label="#{msgs['register.transactionForm.generalData.idCodeType']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputSelect filter="true" id="clientDataIdCodeTypeInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                      value="#{transactionFormBean.entity.clientData.idCodeType}"
                                                      label="#{msgs['register.transactionForm.generalData.idCodeType']}"
                                                      info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.klientData']}->#{msgs['register.transactionForm.generalData.subsection.brokerData']}->#{msgs['register.transactionForm.generalData.idCodeType']}" allowEmpty="true"
                                                      required="#{not empty param['form1:tv:clientDataIdCodeInput_inputText']}">
                                        <f:selectItems value="#{transactionFormBean.importInstitutionIdType}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                        <p:ajax event="change" update="clientDataIdCodeInput"/>
                                    </emir:inputSelect>
                                </p:panelGrid>
                            </p:panel>
                            <p:panel toggleable="true">
                                <f:facet name="header">#{msgs['register.transactionForm.generalData.subsection.settlingInstitutionsData']}</f:facet>
                                <p:panelGrid columns="2">
                                    <ui:remove><!--Kod identyfikacyjny--></ui:remove>
                                    <emir:labeledOutput id="clientDataMemberIdOutput" value="#{transactionFormBean.entity.clientData.memberId}" label="#{msgs['register.transactionForm.generalData.memberId']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputText id="clientDataMemberIdInput" maxlength="50" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                    value="#{transactionFormBean.entity.clientData.memberId}"
                                                    required="#{transactionFormBean.entity.clientData.memberIdType ne null}"
                                                    label="#{msgs['register.transactionForm.generalData.memberId']}"
                                                    info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.klientData']}->#{msgs['register.transactionForm.generalData.subsection.settlingInstitutionsData']}->#{msgs['register.transactionForm.generalData.memberId']}" >
                                        <p:ajax event="change" update="clientDataMemberIdTypeInput"/>
                                    </emir:inputText>

                                    <ui:remove><!--Typ identyfikacyjny--></ui:remove>
                                    <emir:labeledOutput id="clientDataMemberIdTypeOutput" value="#{transactionFormBean.entity.clientData.memberIdType}" label="#{msgs['register.transactionForm.generalData.idCodeType']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputSelect filter="true" id="clientDataMemberIdTypeInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                      value="#{transactionFormBean.entity.clientData.memberIdType}"
                                                      label="#{msgs['register.transactionForm.generalData.memberIdType']}"
                                                      info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.klientData']}->#{msgs['register.transactionForm.generalData.subsection.settlingInstitutionsData']}->#{msgs['register.transactionForm.generalData.memberIdType']}" allowEmpty="true"
                                                      required="#{not empty param['form1:tv:clientDataMemberIdInput_inputText']}">
                                        <f:selectItems value="#{transactionFormBean.importInstitutionIdType}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                        <p:ajax event="change" update="clientDataMemberIdInput"/>
                                    </emir:inputSelect>

                                    <ui:remove><!--Identyfikator konta rozliczajÄ…cego--></ui:remove>
                                    <emir:labeledOutput id="clientDataSettlingAccoutOutput" value="#{transactionFormBean.entity.clientData.settlingAccout}" label="#{msgs['register.transactionForm.generalData.settlingAccout']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputText id="clientDataSettlingAccoutInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                    value="#{transactionFormBean.entity.clientData.settlingAccout}"
                                                    label="#{msgs['register.transactionForm.generalData.settlingAccout']}"
                                                    info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.klientData']}->#{msgs['register.transactionForm.generalData.subsection.settlingInstitutionsData']}->#{msgs['register.transactionForm.generalData.settlingAccout']}"  />
                                </p:panelGrid>
                            </p:panel>
                            <p:panel toggleable="true">
                                <f:facet name="header">#{msgs['register.transactionForm.generalData.subsection.klientData']}</f:facet>
                                <p:panelGrid columns="2">
                                    <ui:remove><!--Kod identyfikacyjny --></ui:remove>
                                    <emir:labeledOutput id="clientDataBeneficiaryCodeOutput" value="#{transactionFormBean.entity.clientData.beneficiaryCode}" label="#{msgs['register.transactionForm.generalData.beneficiaryCode']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputText id="clientDataBeneficiaryCodeInput" maxlength="50" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                    value="#{transactionFormBean.entity.clientData.beneficiaryCode}"
                                                    required="#{transactionFormBean.entity.clientData.beneficiaryCodeType ne null or transactionFormBean.clientReported}"
                                                    label="#{msgs['register.transactionForm.generalData.beneficiaryCode']}"
                                                    info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.klientData']}->#{msgs['register.transactionForm.generalData.subsection.klientData']}->#{msgs['register.transactionForm.generalData.beneficiaryCode']}" 
                                                    style="width: 250px;"
                                                    disabled="#{transactionFormBean.beneficiaryCodeEditingDisabled}">
                                        <p:ajax event="change" update="clientDataBeneficiaryCodeTypeInput"/>
                                    </emir:inputText>

                                    <ui:remove><!--Typ identyfikacyjny--></ui:remove>
                                    <emir:labeledOutput id="clientDataBeneficiaryCodeTypeOutput" value="#{transactionFormBean.entity.clientData.beneficiaryCodeType}" label="#{msgs['register.transactionForm.generalData.beneficiaryCodeType']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputSelect filter="true" id="clientDataBeneficiaryCodeTypeInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                      value="#{transactionFormBean.entity.clientData.beneficiaryCodeType}"
                                                      label="#{msgs['register.transactionForm.generalData.beneficiaryCodeType']}"
                                                      info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.klientData']}->#{msgs['register.transactionForm.generalData.subsection.klientData']}->#{msgs['register.transactionForm.generalData.beneficiaryCodeType']}" allowEmpty="true"
                                                      required="#{not empty param['form1:tv:clientDataBeneficiaryCodeInput_inputText'] or transactionFormBean.clientReported}"
                                                      disabled="#{transactionFormBean.beneficiaryCodeEditingDisabled}">
                                        <f:selectItems value="#{transactionFormBean.importInstitutionIdType}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                        <p:ajax event="change" update="clientDataBeneficiaryCodeInput" partialSubmit="true"/>
                                    </emir:inputSelect>

                                    <ui:remove><!--Charakter, w jakim zawarto transakcjÄ™--></ui:remove>
                                    <emir:labeledOutput id="clientDataTransactionTypeOutput" value="#{transactionFormBean.entity.clientData.transactionType}" label="#{msgs['register.transactionForm.generalData.transactionType']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputSelect filter="true" id="clientDataTransactionTypeInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                      value="#{transactionFormBean.entity.clientData.transactionType}"
                                                      label="#{msgs['register.transactionForm.generalData.transactionType']}"
                                                      required="#{transactionFormBean.entity.originalStatus eq 'N' and transactionFormBean.clientReported}"
                                                      info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.klientData']}->#{msgs['register.transactionForm.generalData.subsection.klientData']}->#{msgs['register.transactionForm.generalData.transactionType']}" allowEmpty="true">
                                        <f:selectItems value="#{transactionFormBean.importTransactionType}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                    </emir:inputSelect>

                                    <ui:remove><!--BezpoÅ›redni zwiÄ…zek z dziaÅ‚alnoÅ›ciÄ… gospodarczÄ…--></ui:remove>
                                    <emir:labeledOutput id="clientDataCommercialActityOutput" value="#{transactionFormBean.entity.clientData.commercialActity}" label="#{msgs['register.transactionForm.generalData.commercialActity']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputSelect filter="true" id="clientDataCommercialActityInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                      value="#{transactionFormBean.entity.clientData.commercialActity}"
                                                      label="#{msgs['register.transactionForm.generalData.commercialActity']}"
                                                      info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.klientData']}->#{msgs['register.transactionForm.generalData.subsection.klientData']}->#{msgs['register.transactionForm.generalData.commercialActity']}" allowEmpty="true">
                                        <f:selectItems value="#{transactionFormBean.importCommercialActity}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                    </emir:inputSelect>

                                    <ui:remove><!--PrÃ³g zwiÄ…zany z obowiÄ…zkiem rozliczania--></ui:remove>
                                    <emir:labeledOutput id="clientDataSettlementThresholdOutput" value="#{transactionFormBean.entity.clientData.settlementThreshold}" label="#{msgs['register.transactionForm.generalData.settlementThreshold']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputSelect filter="true" id="clientDataSettlementThresholdInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                      value="#{transactionFormBean.entity.clientData.settlementThreshold}"
                                                      label="#{msgs['register.transactionForm.generalData.settlementThreshold']}"
                                                      info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.klientData']}->#{msgs['register.transactionForm.generalData.subsection.klientData']}->#{msgs['register.transactionForm.generalData.settlementThreshold']}" allowEmpty="true">
                                        <f:selectItems value="#{transactionFormBean.importSettlementThreshold}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                    </emir:inputSelect>

                                    <ui:remove><!--Kod portfela zabezpieczeÅ„--></ui:remove>
                                    <emir:labeledOutput id="clientDataCommWalletCodeOutput" value="#{transactionFormBean.entity.clientData.commWalletCode}" label="#{msgs['register.transactionForm.generalData.commWalletCode']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                    <emir:inputText id="clientDataCommWalletCodeInput" rendered="#{not (transactionFormBean.formType == 'View')}" maxlength="35"
                                                    value="#{transactionFormBean.entity.clientData.commWalletCode}"
                                                    label="#{msgs['register.transactionForm.generalData.commWalletCode']}"
                                                    info="#{msgs['register.transactionForm.tabs.generalData']}->#{msgs['register.transactionForm.generalData.section.klientData']}->#{msgs['register.transactionForm.generalData.subsection.klientData']}->#{msgs['register.transactionForm.generalData.commWalletCode']}"  />
                                </p:panelGrid>
                            </p:panel>
                        </p:panel>
                    </h:panelGroup>
                </p:tab>
                <p:tab title="#{msgs['register.transactionForm.tabs.contractType']}" id="tContractType" rendered="#{not transactionFormBean.valuation}">
                    <h:panelGroup id="contractTypePg1">
                        <p:panel toggleable="true">
                            <f:facet name="header">#{msgs['register.transactionForm.contractType.section.contractType']}</f:facet>
                            <p:panelGrid columns="2">
                                <ui:remove><!--Stosowana klasyfikacja--></ui:remove>
                                <emir:labeledOutput id="contractTypeOutput" value="#{transactionFormBean.entity.contractDetailedData.contractData.contractType}" label="#{msgs['register.transactionForm.contractType.contractType']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect filter="true" id="contractTypeInput" allowEmpty="true" required="true"
                                                  rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.contractDetailedData.contractData.contractType}"
                                                  label="#{msgs['register.transactionForm.contractType.contractType']}"
                                                  info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.contractType']}->#{msgs['register.transactionForm.contractType.contractType']}" >
                                    <f:selectItems value="#{transactionFormBean.importContractType}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                </emir:inputSelect>
                                <ui:remove><!--Kod identyfikacyjny produktu nr 1--></ui:remove>
                                <emir:labeledOutput id="prod1CodeOutput" value="#{transactionFormBean.entity.contractDetailedData.contractData.prod1Code}" label="#{msgs['register.transactionForm.contractType.prod1Code']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="prod1CodeInput" maxlength="20" rendered="#{not (transactionFormBean.formType == 'View')}" required="true"
                                                value="#{transactionFormBean.entity.contractDetailedData.contractData.prod1Code}"
                                                label="#{msgs['register.transactionForm.contractType.prod1Code']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.contractType']}->#{msgs['register.transactionForm.contractType.prod1Code']}" />

                                <ui:remove><!--Kod identyfikacyjny produktu nr 2--></ui:remove>
                                <emir:labeledOutput id="prod2CodeOutput" value="#{transactionFormBean.entity.contractDetailedData.contractData.prod2Code}" label="#{msgs['register.transactionForm.contractType.prod2Code']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="prod2CodeInput" maxlength="20" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.contractDetailedData.contractData.prod2Code}"
                                                label="#{msgs['register.transactionForm.contractType.prod2Code']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.contractType']}->#{msgs['register.transactionForm.contractType.prod2Code']}" />

                                <ui:remove><!--Typ instrumentu bazowego--></ui:remove>
                                <emir:labeledOutput id="underlyingTpOutput" value="#{transactionFormBean.entity.contractDetailedData.contractData.underlyingTp}" 
                                                    label="#{msgs['register.transactionForm.contractType.underlyingTp']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect filter="true" id="underlyingTpInput" 
                                                  allowEmpty="true"
                                                  rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.contractDetailedData.contractData.underlyingTp}"
                                                  label="#{msgs['register.transactionForm.contractType.underlyingTp']}"
                                                  info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.contractType']}->#{msgs['register.transactionForm.contractType.underlyingTp']}" >
                                    <f:selectItems value="#{transactionFormBean.importUnderlyingType}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                </emir:inputSelect>
                                
                                <ui:remove><!--Instrument bazowy--></ui:remove>
                                <emir:labeledOutput id="underlyingIdOutput" value="#{transactionFormBean.entity.contractDetailedData.contractData.underlyingId}" label="#{msgs['register.transactionForm.contractType.underlyingId']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText  id="underlyingIdInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                 value="#{transactionFormBean.entity.contractDetailedData.contractData.underlyingId}"
                                                 label="#{msgs['register.transactionForm.contractType.underlyingId']}"
                                                 info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.contractType']}->#{msgs['register.transactionForm.contractType.underlyingId']}" >

                                </emir:inputText>

                                <ui:remove><!--Kod kraju emitenta instrumentu bazowego--></ui:remove>
                                <emir:labeledOutput id="underlCountryCodeOutput" value="#{transactionFormBean.entity.contractDetailedData.underlCountryCode}" label="#{msgs['register.transactionForm.contractType.underlCountryCode']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect filter="true" id="underlCountryCodeInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.contractDetailedData.underlCountryCode}"
                                                  label="#{msgs['register.transactionForm.contractType.underlCountryCode']}"
                                                  info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.contractType']}->#{msgs['register.transactionForm.contractType.underlCountryCode']}" allowEmpty="true">
                                    <f:selectItems value="#{transactionFormBean.importCountryCode}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                </emir:inputSelect>

                                <ui:remove><!--Waluta nominalna 1--></ui:remove>
                                <emir:labeledOutput id="underlCurrency1CodeOutput" value="#{transactionFormBean.entity.contractDetailedData.underlCurrency1Code}" label="#{msgs['register.transactionForm.contractType.underlCurrency1Code']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect filter="true" id="underlCurrency1CodeInput" rendered="#{not (transactionFormBean.formType == 'View')}" required="true"
                                                  value="#{transactionFormBean.entity.contractDetailedData.underlCurrency1Code}"
                                                  label="#{msgs['register.transactionForm.contractType.underlCurrency1Code']}"
                                                  info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.contractType']}->#{msgs['register.transactionForm.contractType.underlCurrency1Code']}" allowEmpty="true">
                                    <f:selectItems value="#{transactionFormBean.importCurrencyCode}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                </emir:inputSelect>

                                <ui:remove><!--Waluta nominalna 2--></ui:remove>
                                <emir:labeledOutput id="underlCurrency2CodeOutput" value="#{transactionFormBean.entity.contractDetailedData.underlCurrency2Code}" label="#{msgs['register.transactionForm.contractType.underlCurrency2Code']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect filter="true" id="underlCurrency2CodeInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.contractDetailedData.underlCurrency2Code}"
                                                  label="#{msgs['register.transactionForm.contractType.underlCurrency2Code']}"
                                                  info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.contractType']}->#{msgs['register.transactionForm.contractType.underlCurrency2Code']}" allowEmpty="true">
                                    <f:selectItems value="#{transactionFormBean.importCurrencyCode}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                </emir:inputSelect>

                                <ui:remove><!--Waluta dostawy--></ui:remove>
                                <emir:labeledOutput id="delivCurrencyCodeOutput" value="#{transactionFormBean.entity.contractDetailedData.delivCurrencyCode}" label="#{msgs['register.transactionForm.contractType.delivCurrencyCode']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect filter="true" id="delivCurrencyCodeInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.contractDetailedData.delivCurrencyCode}"
                                                  label="#{msgs['register.transactionForm.contractType.delivCurrencyCode']}"
                                                  info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.contractType']}->#{msgs['register.transactionForm.contractType.delivCurrencyCode']}" allowEmpty="true">
                                    <f:selectItems value="#{transactionFormBean.importCurrencyCode}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                </emir:inputSelect>
                            </p:panelGrid>
                        </p:panel>
                        <p:panel toggleable="true">
                            <f:facet name="header">#{msgs['register.transactionForm.contractType.section.detailsTransaction']}</f:facet>
                            <p:panelGrid columns="2">
                                <ui:remove><!--Miejsce realiazacji--></ui:remove>
                                <emir:labeledOutput id="realizationVenueOutput" value="#{transactionFormBean.entity.transactionDetails.realizationVenue}" label="#{msgs['register.transactionForm.generalData.realizationVenue']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="realizationVenueInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                maxlength="4"
                                                required="#{transactionFormBean.entity.originalStatus eq 'N'}"
                                                value="#{transactionFormBean.entity.transactionDetails.realizationVenue}"
                                                label="#{msgs['register.transactionForm.generalData.realizationVenue']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.realizationVenue']}"  />

                                <ui:remove><!--Kompresja--></ui:remove>
                                <emir:labeledOutput id="compressionOutput" value="#{transactionFormBean.entity.transactionDetails.compression}" label="#{msgs['register.transactionForm.generalData.compression']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect filter="true" id="compressionInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.transactionDetails.compression}"
                                                  label="#{msgs['register.transactionForm.generalData.compression']}"
                                                  info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.compression']}" allowEmpty="true">
                                    <f:selectItems value="#{transactionFormBean.importCompression}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                </emir:inputSelect>

                                <ui:remove><!--Cena--></ui:remove>
                                <emir:labeledOutput id="unitPriceOutput" value="#{transactionFormBean.entity.transactionDetails.unitPrice}" label="#{msgs['register.transactionForm.generalData.unitPrice']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="unitPriceInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.transactionDetails.unitPrice}"
                                                label="#{msgs['register.transactionForm.generalData.unitPrice']}"
                                                required="#{transactionFormBean.entity.transactionDetails.unitPriceCurrency ne null}"
                                                disabled="#{not empty param['form1:tv:unitPriceRateInput_inputText'] and not
                                                            (not empty param['form1:tv:unitPriceInput_inputText'] and not empty param['form1:tv:unitPriceRateInput_inputText'] and transactionFormBean.entity.transactionDetails.unitPriceCurrency ne null)}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.unitPrice']}"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                    <p:ajax event="change" update="unitPriceCurrencyInput unitPriceRateInput"/>
                                </emir:inputText>

                                <ui:remove><!--Waluta--></ui:remove>
                                <emir:labeledOutput id="unitPriceCurrencyOutput" value="#{transactionFormBean.entity.transactionDetails.unitPriceCurrency}" label="#{msgs['register.transactionForm.generalData.unitPriceCurrency']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect filter="true" id="unitPriceCurrencyInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.transactionDetails.unitPriceCurrency}"
                                                  label="#{msgs['register.transactionForm.generalData.unitPriceCurrency']}"
                                                  required="#{not empty param['form1:tv:unitPriceInput_inputText']}"
                                                  disabled="#{not empty param['form1:tv:unitPriceRateInput_inputText'] and not
                                                              (not empty param['form1:tv:unitPriceInput_inputText'] and not empty param['form1:tv:unitPriceRateInput_inputText'] and transactionFormBean.entity.transactionDetails.unitPriceCurrency ne null)}"
                                                  info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.unitPriceCurrency']}" allowEmpty="true">
                                    <f:selectItems value="#{transactionFormBean.importCurrencyCode}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                    <p:ajax event="change" update="unitPriceInput unitPriceRateInput"/>
                                </emir:inputSelect>

                                <ui:remove><!--Stawka procentowa--></ui:remove>
                                <emir:labeledOutput id="unitPriceRateOutput" value="#{transactionFormBean.entity.transactionDetails.unitPriceRate}" label="#{msgs['register.transactionForm.generalData.unitPriceRate']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="unitPriceRateInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.transactionDetails.unitPriceRate}"
                                                label="#{msgs['register.transactionForm.generalData.unitPriceRate']}"
                                                required="false"
                                                disabled="#{(not empty param['form1:tv:unitPriceInput_inputText'] and transactionFormBean.entity.transactionDetails.unitPriceCurrency ne null) and not
                                                            (not empty param['form1:tv:unitPriceInput_inputText'] and not empty param['form1:tv:unitPriceRateInput_inputText'] and transactionFormBean.entity.transactionDetails.unitPriceCurrency ne null)}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.unitPriceRate']}"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                    <p:ajax event="change" update="unitPriceCurrencyInput unitPriceInput"/>
                                </emir:inputText>

                                <ui:remove><!--Kwota nominalna--></ui:remove>
                                <emir:labeledOutput id="nominalAmountOutput" value="#{transactionFormBean.entity.transactionDetails.nominalAmount}" label="#{msgs['register.transactionForm.generalData.nominalAmount']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'2'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="nominalAmountInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                required="true"
                                                value="#{transactionFormBean.entity.transactionDetails.nominalAmount}"
                                                label="#{msgs['register.transactionForm.generalData.nominalAmount']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.nominalAmount']}"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'2'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                </emir:inputText>

                                <ui:remove><!--MnoÅ¼nik ceny--></ui:remove>
                                <emir:labeledOutput id="priceMultiplierOutput" value="#{transactionFormBean.entity.transactionDetails.priceMultiplier}" label="#{msgs['register.transactionForm.generalData.priceMultiplier']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="priceMultiplierInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                maxlength="10"
                                                value="#{transactionFormBean.entity.transactionDetails.priceMultiplier}"
                                                label="#{msgs['register.transactionForm.generalData.priceMultiplier']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.priceMultiplier']}"  >
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                </emir:inputText>

                                <ui:remove><!--Liczba kontraktÃ³w w zgÅ‚oszeniu--></ui:remove>
                                <emir:labeledOutput id="contractCountOutput" value="#{transactionFormBean.entity.transactionDetails.contractCount}" label="#{msgs['register.transactionForm.generalData.contractCount']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="contractCountInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                required="true"
                                                maxlength="10"
                                                value="#{transactionFormBean.entity.transactionDetails.contractCount}"
                                                label="#{msgs['register.transactionForm.generalData.contractCount']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.contractCount']}">
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                </emir:inputText>

                                <ui:remove><!--PÅ‚atnoÅ›Ä‡ z gÃ³ry--></ui:remove>
                                <emir:labeledOutput id="nominalAmountOutput" value="#{transactionFormBean.entity.transactionDetails.inAdvanceAmount}" label="#{msgs['register.transactionForm.generalData.inAdvanceAmount']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'2'}"/>
                                </emir:labeledOutput>

                                <emir:inputText id="inAdvanceAmountInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.transactionDetails.inAdvanceAmount}"
                                                label="#{msgs['register.transactionForm.generalData.inAdvanceAmount']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.inAdvanceAmount']}"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'2'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'10'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                </emir:inputText>

                                <ui:remove><!--Typ dostawy--></ui:remove>
                                <emir:labeledOutput id="delivTypeOutput" value="#{transactionFormBean.entity.transactionDetails.delivType}" label="#{msgs['register.transactionForm.generalData.delivType']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect id="delivTypeInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.transactionDetails.delivType}"
                                                  label="#{msgs['register.transactionForm.generalData.delivType']}"
                                                  info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.delivType']}" allowEmpty="true">
                                    <f:selectItems value="#{transactionFormBean.importDeliverType}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                </emir:inputSelect>

                                <ui:remove><!--Data i czas realizacji transakcji--></ui:remove>
                                <emir:labeledOutput id="executionDateOutput" value="#{transactionFormBean.entity.transactionDetails.executionDate}" label="#{msgs['register.transactionForm.generalData.executionDate']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:convertDateTime pattern="#{applicationBean.dateTimePattern}"/>
                                </emir:labeledOutput>
                                <emir:inputDate id="executionDateInput"
                                                rendered="#{not (transactionFormBean.formType == 'View')}"
                                                pattern="#{applicationBean.dateTimePattern}"
                                                value="#{transactionFormBean.entity.transactionDetails.executionDate}"
                                                label="#{msgs['register.transactionForm.generalData.executionDate']}"
                                                required="true"
                                                mindate="#{msgs['commons.utilsClient.minimalData']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.executionDate']}"/>

                                <ui:remove><!--Data wejÅ›cia w Å¼ycie obowiÄ…zkÃ³w wynikajÄ…cych z kontraktu--></ui:remove>
                                <emir:labeledOutput id="effectiveDateOutput" value="#{transactionFormBean.entity.transactionDetails.effectiveDate}" label="#{msgs['register.transactionForm.generalData.effectiveDate']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:convertDateTime pattern="#{applicationBean.dateTimePattern}"/>
                                </emir:labeledOutput>
                                <emir:inputDate id="effectiveDateInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.transactionDetails.effectiveDate}"
                                                pattern="#{applicationBean.dateTimePattern}"
                                                label="#{msgs['register.transactionForm.generalData.effectiveDate']}" mindate="#{msgs['commons.utilsClient.minimalData']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.effectiveDate']}"/>

                                <ui:remove><!--Termin zapadalnoÅ›ci--></ui:remove>
                                <emir:labeledOutput id="maturityDateOutput" value="#{transactionFormBean.entity.transactionDetails.maturityDate}" label="#{msgs['register.transactionForm.generalData.maturityDate']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:convertDateTime pattern="#{applicationBean.dateTimePattern}"/>
                                </emir:labeledOutput>
                                <emir:inputDate id="maturityDateInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.transactionDetails.maturityDate}"
                                                pattern="#{applicationBean.dateTimePattern}"
                                                label="#{msgs['register.transactionForm.generalData.maturityDate']}" mindate="#{msgs['commons.utilsClient.minimalData']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.maturityDate']}"/>

                                <ui:remove><!--Data rozwiÄ…zania zgÅ‚aszanego kontraktu--></ui:remove>
                                <emir:labeledOutput id="terminationDateOutput" value="#{transactionFormBean.entity.transactionDetails.terminationDate}" label="#{msgs['register.transactionForm.generalData.terminationDate']}" rendered="#{transactionFormBean.formType == 'View'}">
                                    <f:convertDateTime pattern="#{applicationBean.dateTimePattern}"/>
                                </emir:labeledOutput>
                                <emir:inputDate id="terminationDateInput"
                                                rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.transactionDetails.terminationDate}"
                                                label="#{msgs['register.transactionForm.generalData.terminationDate']}"
                                                pattern="#{applicationBean.dateTimePattern}"
                                                readonlyInput="true"
                                                required="#{transactionFormBean.entity.dataType == 'COMPLETED'}"
                                                mindate="#{transactionFormBean.dateAfterTransactonDate(transactionFormBean.entity.transactionDate)}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.terminationDate']}"/>

                                <ui:remove><!--Data rozrachunku instrumentu bazowego--></ui:remove>
                                <emir:labeledOutput id="settlementDateOutput" value="#{transactionFormBean.entity.transactionDetails.settlementDate}" label="#{msgs['register.transactionForm.generalData.settlementDate']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:convertDateTime pattern="#{applicationBean.dateTimePattern}"/>
                                </emir:labeledOutput>
                                <emir:inputDate id="settlementDateInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.transactionDetails.settlementDate}"
                                                pattern="#{applicationBean.dateTimePattern}"
                                                label="#{msgs['register.transactionForm.generalData.settlementDate']}" mindate="#{msgs['commons.utilsClient.minimalData']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.settlementDate']}"/>

                                <ui:remove><!--Rodzaj umowy ramowej--></ui:remove>
                                <emir:labeledOutput id="frameworkAggrTypeOutput" value="#{transactionFormBean.entity.transactionDetails.frameworkAggrType}" label="#{msgs['register.transactionForm.generalData.frameworkAggrType']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="frameworkAggrTypeInput" rendered="#{not (transactionFormBean.formType == 'View')}" maxlength="50"
                                                value="#{transactionFormBean.entity.transactionDetails.frameworkAggrType}"
                                                label="#{msgs['register.transactionForm.generalData.frameworkAggrType']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.frameworkAggrType']}"  />

                                <ui:remove><!--Wersja umowy ramowej--></ui:remove>
                                <emir:labeledOutput id="frameworkAggrVerOutput" value="#{transactionFormBean.entity.transactionDetails.frameworkAggrVer}" label="#{msgs['register.transactionForm.generalData.frameworkAggrVer']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="frameworkAggrVerInput" rendered="#{not (transactionFormBean.formType == 'View')}" maxlength="4"
                                                value="#{transactionFormBean.entity.transactionDetails.frameworkAggrVer}"
                                                label="#{msgs['register.transactionForm.generalData.frameworkAggrVer']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.detailsTransaction']}->#{msgs['register.transactionForm.generalData.frameworkAggrVer']}"  >

                                </emir:inputText>
                            </p:panelGrid>
                        </p:panel>
                        <p:panel toggleable="true">
                            <f:facet name="header">#{msgs['register.transactionForm.contractType.section.limitationsRiskReporting']}</f:facet>
                            <p:panelGrid columns="2">
                                <ui:remove><!--SposÃ³b dokonania potwierdzenia--></ui:remove>
                                <emir:labeledOutput id="confirmationTypeOutput" value="#{transactionFormBean.entity.riskReduce.confirmationType}" label="#{msgs['register.transactionForm.generalData.confirmationType']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect id="confirmationTypeInput" 
                                                  rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.riskReduce.confirmationType}"
                                                  label="#{msgs['register.transactionForm.generalData.confirmationType']}"
                                                  info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.limitationsRiskReporting']}->#{msgs['register.transactionForm.generalData.confirmationType']}" 
                                                  allowEmpty="true"
                                                  update="confirmedInput confirmationDateInput"
                                                  changeListener="#{transactionFormBean.confirmationChanged()}">
                                    <f:selectItems value="#{transactionFormBean.importConfirmationType}" 
                                                   var="option" 
                                                   itemLabel="#{option}" 
                                                   itemValue="#{option}"/>
                                </emir:inputSelect>
                                <ui:remove><!--Znacznik czasu potwierdzenia--></ui:remove>
                                <emir:labeledOutput id="confirmationDateOutput" value="#{transactionFormBean.entity.riskReduce.confirmationDate}" label="#{msgs['register.transactionForm.generalData.confirmationDate']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:convertDateTime pattern="#{applicationBean.dateTimePattern}"/>
                                </emir:labeledOutput>
                                <emir:inputDate id="confirmationDateInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                mindate="#{msgs['commons.utilsClient.minimalData']}"
                                                pattern="#{applicationBean.dateTimePattern}"
                                                value="#{transactionFormBean.entity.riskReduce.confirmationDate}"
                                                label="#{msgs['register.transactionForm.generalData.confirmationDate']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.limitationsRiskReporting']}->#{msgs['register.transactionForm.generalData.confirmationDate']}"/>

                            </p:panelGrid>
                        </p:panel>
                        <p:panel toggleable="true">
                            <f:facet name="header">#{msgs['register.transactionForm.contractType.section.settlement']}</f:facet>
                            <p:panelGrid columns="2">
                                <ui:remove><!--ObowiÄ…zek rozliczenia--></ui:remove>
                                <emir:labeledOutput id="settlementObligOutput" value="#{transactionFormBean.entity.transactionClearing.clearingOblig}" label="#{msgs['register.transactionForm.generalData.clearingOblig']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect id="settlementObligInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  allowEmpty="true" required="true"
                                                  value="#{transactionFormBean.entity.transactionClearing.clearingOblig}"
                                                  label="#{msgs['register.transactionForm.generalData.clearingOblig']}"
                                                  info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.settlement']}->#{msgs['register.transactionForm.generalData.clearingOblig']}" >
                                    <f:selectItems value="#{transactionFormBean.importClearingOblig}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                </emir:inputSelect>

                                <ui:remove><!--Rozliczono--></ui:remove>
                                <emir:labeledOutput id="settledOutput" value="#{transactionFormBean.entity.transactionClearing.cleared}" label="#{msgs['register.transactionForm.generalData.cleared']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect id="settledInput" rendered="#{not (transactionFormBean.formType == 'View')}" allowEmpty="true"
                                                  value="#{transactionFormBean.entity.transactionClearing.cleared}"
                                                  label="#{msgs['register.transactionForm.generalData.cleared']}"
                                                  info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.settlement']}->#{msgs['register.transactionForm.generalData.cleared']}" >
                                    <f:selectItems value="#{transactionFormBean.importCleared}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                </emir:inputSelect>

                                <ui:remove><!--Znacznik czasu rozlicznia--></ui:remove>
                                <emir:labeledOutput id="settlementSettlementDateOutput" value="#{transactionFormBean.entity.transactionClearing.clearingDate}" label="#{msgs['register.transactionForm.generalData.clearingDate']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:convertDateTime pattern="#{applicationBean.dateTimePattern}"/>
                                </emir:labeledOutput>
                                <emir:inputDate id="settlementSettlementDateInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.transactionClearing.clearingDate}"
                                                pattern="#{applicationBean.dateTimePattern}"
                                                label="#{msgs['register.transactionForm.generalData.clearingDate']}" mindate="#{msgs['commons.utilsClient.minimalData']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.settlement']}->#{msgs['register.transactionForm.generalData.clearingDate']}"/>

                                <ui:remove><!--CCP--></ui:remove>
                                <emir:labeledOutput id="ccpCodeOutput" value="#{transactionFormBean.entity.transactionClearing.ccpCode}" label="#{msgs['register.transactionForm.generalData.ccpCode']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="ccpCodeInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.transactionClearing.ccpCode}"
                                                label="#{msgs['register.transactionForm.generalData.ccpCode']}"
                                                info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.settlement']}->#{msgs['register.transactionForm.generalData.ccpCode']}"/>

                                <ui:remove><!--Transakcja wewnÄ…trzgrupowa--></ui:remove>
                                <emir:labeledOutput id="intragropuTransOutput" value="#{transactionFormBean.entity.transactionClearing.intergropuTrans}" 
                                                    label="#{msgs['register.transactionForm.generalData.intergropuTrans']}" 
                                                    rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect id="intragropuTransInput" rendered="#{not (transactionFormBean.formType == 'View')}" allowEmpty="true"
                                                  value="#{transactionFormBean.entity.transactionClearing.intergropuTrans}"
                                                  label="#{msgs['register.transactionForm.generalData.intergropuTrans']}"
                                                  info="#{msgs['register.transactionForm.tabs.contractType']}->#{msgs['register.transactionForm.contractType.section.settlement']}->#{msgs['register.transactionForm.generalData.intergropuTrans']}" >
                                    <f:selectItems value="#{transactionFormBean.importIntergropuTrans}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                </emir:inputSelect>
                            </p:panelGrid>
                        </p:panel>
                    </h:panelGroup>
                </p:tab>
                <p:tab title="#{msgs['register.transactionForm.tabs.derivatives']}" id="tDerivatives" rendered="#{not transactionFormBean.valuation}">
                    <h:panelGroup id="derivativesPg1">
                        <p:panel toggleable="true">
                            <f:facet name="header">#{msgs['register.transactionForm.derivatives.section.transactionInterestRates']}</f:facet>
                            <p:panelGrid columns="2">
                                <ui:remove><!--StaÅ‚a stopa procentowa - "Noga 1"--></ui:remove>
                                <emir:labeledOutput id="fixedRateLeg1Output" value="#{transactionFormBean.entity.percentageRateData.fixedRateLeg1}" label="#{msgs['register.transactionForm.derivatives.fixedRateLeg1']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>

                                <emir:inputText id="fixedRateLeg1Input" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.percentageRateData.fixedRateLeg1}"
                                                label="#{msgs['register.transactionForm.derivatives.fixedRateLeg1']}"
                                                info="#{msgs['register.transactionForm.tabs.derivatives']}->#{msgs['register.transactionForm.derivatives.section.transactionInterestRates']}->#{msgs['register.transactionForm.derivatives.fixedRateLeg1']}"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                </emir:inputText>

                                <ui:remove><!--StaÅ‚a stopa procentowa - "Noga 2"--></ui:remove>
                                <emir:labeledOutput id="fixedRateLeg2Output" value="#{transactionFormBean.entity.percentageRateData.fixedRateLeg2}" label="#{msgs['register.transactionForm.derivatives.fixedRateLeg2']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="fixedRateLeg2Input" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.percentageRateData.fixedRateLeg2}"
                                                label="#{msgs['register.transactionForm.derivatives.fixedRateLeg2']}"
                                                info="#{msgs['register.transactionForm.tabs.derivatives']}->#{msgs['register.transactionForm.derivatives.section.transactionInterestRates']}->#{msgs['register.transactionForm.derivatives.fixedRateLeg2']}"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'20'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                </emir:inputText>

                                <ui:remove><!--DÅ‚ugoÅ›Ä‡ okresu stosowania staÅ‚ej stopy procentowej--></ui:remove>
                                <emir:labeledOutput id="fixedRateDayCountOutput" value="#{transactionFormBean.entity.percentageRateData.fixedRateDayCount}" label="#{msgs['register.transactionForm.derivatives.fixedRateDayCount']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="fixedRateDayCountInput" rendered="#{not (transactionFormBean.formType == 'View')}" maxlength="10"
                                                value="#{transactionFormBean.entity.percentageRateData.fixedRateDayCount}"
                                                label="#{msgs['register.transactionForm.derivatives.fixedRateDayCount']}"
                                                info="#{msgs['register.transactionForm.tabs.derivatives']}->#{msgs['register.transactionForm.derivatives.section.transactionInterestRates']}->#{msgs['register.transactionForm.derivatives.fixedRateDayCount']}"  />

                                <ui:remove><!--CzÄ™stotliwoÅ›Ä‡ pÅ‚atnoÅ›ci - noga o staÅ‚ym oprocentowaniu--></ui:remove>
                                <emir:labeledOutput id="fixedPaymentFreqOutput" value="#{transactionFormBean.entity.percentageRateData.fixedPaymentFreq}" label="#{msgs['register.transactionForm.derivatives.fixedPaymentFreq']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="fixedPaymentFreqInput" rendered="#{not (transactionFormBean.formType == 'View')}" maxlength="10"
                                                value="#{transactionFormBean.entity.percentageRateData.fixedPaymentFreq}"
                                                label="#{msgs['register.transactionForm.derivatives.fixedPaymentFreq']}"
                                                info="#{msgs['register.transactionForm.tabs.derivatives']}->#{msgs['register.transactionForm.derivatives.section.transactionInterestRates']}->#{msgs['register.transactionForm.derivatives.fixedPaymentFreq']}"  />

                                <ui:remove><!--CzÄ™stotliwoÅ›Ä‡ pÅ‚atnoÅ›ci - noga o zmiennym oprocentowaniu--></ui:remove>
                                <emir:labeledOutput id="floatPaymentFreqOutput" value="#{transactionFormBean.entity.percentageRateData.floatPaymentFreq}" label="#{msgs['register.transactionForm.derivatives.floatPaymentFreq']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="floatPaymentFreqInput" rendered="#{not (transactionFormBean.formType == 'View')}" maxlength="10"
                                                value="#{transactionFormBean.entity.percentageRateData.floatPaymentFreq}"
                                                label="#{msgs['register.transactionForm.derivatives.floatPaymentFreq']}"
                                                info="#{msgs['register.transactionForm.tabs.derivatives']}->#{msgs['register.transactionForm.derivatives.section.transactionInterestRates']}->#{msgs['register.transactionForm.derivatives.floatPaymentFreq']}"  />

                                <ui:remove><!--CzÄ™stotliwoÅ›Ä‡ pÅ‚atnoÅ›ci na nowo zmiennej stopy procentowej--></ui:remove>
                                <emir:labeledOutput id="newPaymentFreqOutput" value="#{transactionFormBean.entity.percentageRateData.newPaymentFreq}" label="#{msgs['register.transactionForm.derivatives.newPaymentFreq']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="newPaymentFreqInput" rendered="#{not (transactionFormBean.formType == 'View')}" maxlength="10"
                                                value="#{transactionFormBean.entity.percentageRateData.newPaymentFreq}"
                                                label="#{msgs['register.transactionForm.derivatives.newPaymentFreq']}"
                                                info="#{msgs['register.transactionForm.tabs.derivatives']}->#{msgs['register.transactionForm.derivatives.section.transactionInterestRates']}->#{msgs['register.transactionForm.derivatives.newPaymentFreq']}"  />

                                <ui:remove><!--Zmienna stopa procentowa czÄ™Å›ci ("noga") 1--></ui:remove>
                                <emir:labeledOutput id="floatRateLeg1Output" value="#{transactionFormBean.entity.percentageRateData.floatRateLeg1}" label="#{msgs['register.transactionForm.derivatives.floatRateLeg1']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="floatRateLeg1Input" rendered="#{not (transactionFormBean.formType == 'View')}" maxlength="20"
                                                value="#{transactionFormBean.entity.percentageRateData.floatRateLeg1}"
                                                label="#{msgs['register.transactionForm.derivatives.floatRateLeg1']}"
                                                info="#{msgs['register.transactionForm.tabs.derivatives']}->#{msgs['register.transactionForm.derivatives.section.transactionInterestRates']}->#{msgs['register.transactionForm.derivatives.floatRateLeg1']}"  />

                                <ui:remove><!--Zmienna stopa procentowa czÄ™Å›ci ("noga") 2--></ui:remove>
                                <emir:labeledOutput id="floatRateLeg2Output" value="#{transactionFormBean.entity.percentageRateData.floatRateLeg2}" label="#{msgs['register.transactionForm.derivatives.floatRateLeg2']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="floatRateLeg2Input" rendered="#{not (transactionFormBean.formType == 'View')}" maxlength="20"
                                                value="#{transactionFormBean.entity.percentageRateData.floatRateLeg2}"
                                                label="#{msgs['register.transactionForm.derivatives.floatRateLeg2']}"
                                                info="#{msgs['register.transactionForm.tabs.derivatives']}->#{msgs['register.transactionForm.derivatives.section.transactionInterestRates']}->#{msgs['register.transactionForm.derivatives.floatRateLeg2']}"  />
                            </p:panelGrid>
                        </p:panel>
                        <p:panel toggleable="true">
                            <f:facet name="header">#{msgs['register.transactionForm.derivatives.section.transactionCurrency']}</f:facet>
                            <p:panelGrid columns="2">
                                <ui:remove><!--Inna waluta transakcji--></ui:remove>
                                <emir:labeledOutput id="currencyTradeCodeOutput" value="#{transactionFormBean.entity.currencyTradeData.currencyTradeCode}" label="#{msgs['register.transactionForm.derivatives.currencyTradeCode']}" rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputSelect id="currencyTradeCodeInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                  value="#{transactionFormBean.entity.currencyTradeData.currencyTradeCode}"
                                                  label="#{msgs['register.transactionForm.derivatives.currencyTradeCode']}"
                                                  info="#{msgs['register.transactionForm.tabs.derivatives']}->#{msgs['register.transactionForm.derivatives.section.transactionCurrency']}->#{msgs['register.transactionForm.derivatives.currencyTradeCode']}" allowEmpty="true">
                                    <f:selectItems value="#{transactionFormBean.importCurrencyCode}" var="option" itemLabel="#{option}" itemValue="#{option}"/>
                                </emir:inputSelect>

                                <ui:remove><!--Kurs walutowy 1--></ui:remove>
                                <emir:labeledOutput id="currTradeExchRateOutput" value="#{transactionFormBean.entity.currencyTradeData.currTradeExchRate}" label="#{msgs['register.transactionForm.derivatives.currTradeExchRate']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="currTradeExchRateInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.currencyTradeData.currTradeExchRate}"
                                                label="#{msgs['register.transactionForm.derivatives.currTradeExchRate']}"
                                                info="#{msgs['register.transactionForm.tabs.derivatives']}->#{msgs['register.transactionForm.derivatives.section.transactionCurrency']}->#{msgs['register.transactionForm.derivatives.currTradeExchRate']}"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'10'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                </emir:inputText>

                                <ui:remove><!--Terminowy kurs walutowy--></ui:remove>
                                <emir:labeledOutput id="currTradeFrwdRateOutput" value="#{transactionFormBean.entity.currencyTradeData.currTradeFrwdRate}" label="#{msgs['register.transactionForm.derivatives.currTradeFrwdRate']}" rendered="#{transactionFormBean.formType == 'View'}" >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                </emir:labeledOutput>
                                <emir:inputText id="currTradeFrwdRateInput" rendered="#{not (transactionFormBean.formType == 'View')}"
                                                value="#{transactionFormBean.entity.currencyTradeData.currTradeFrwdRate}"
                                                label="#{msgs['register.transactionForm.derivatives.currTradeFrwdRate']}"
                                                info="#{msgs['register.transactionForm.tabs.derivatives']}->#{msgs['register.transactionForm.derivatives.section.transactionCurrency']}->#{msgs['register.transactionForm.derivatives.currTradeFrwdRate']}"  >
                                    <f:converter converterId="pl.pd.emir.clientutils.converter.BigDecimalConverter"/>
                                    <f:attribute name="maxFractionDigits" value="#{'5'}"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxIntegerDigitsValidator"/>
                                    <f:attribute name="maxIntegerDigits" value="#{'10'}"/>
                                    <f:validator validatorId="pl.pd.emir.clientutils.validators.PositiveNumberValidator"/>
                                    <f:validator validatorId="pl.pd.emir.register.bean.validators.MaxFractionDigitsValidator"/>
                                </emir:inputText>

                                <ui:remove><!--Podstawa kursu walutowego--></ui:remove>
                                <emir:labeledOutput id="currTradeExchRatecurrTradeBasisOutput" value="#{transactionFormBean.entity.currencyTradeData.currTradeBasis}" label="#{msgs['register.transactionForm.derivatives.currTradeBasis']}"
                                                    rendered="#{transactionFormBean.formType == 'View'}" />
                                <emir:inputText id="currTradeBasisInput" rendered="#{not (transactionFormBean.formType == 'View')}" maxlength="10"
                                                value="#{transactionFormBean.entity.currencyTradeData.currTradeBasis}"
                                                label="#{msgs['register.transactionForm.derivatives.currTradeBasis']}"
                                                info="#{msgs['register.transactionForm.tabs.derivatives']}->#{msgs['register.transactionForm.derivatives.section.transactionCurrency']}->#{msgs['register.transactionForm.derivatives.currTradeBasis']}" />
                            </p:panelGrid>
                        </p:panel>
                    </h:panelGroup>
                </p:tab>
            </p:tabView>
            <p:confirmDialog id="confirmDialogError" widgetVar="confirmDialogError" message="#{transactionFormBean.infoWindow}" header="#{msgs['commons.MessageDialogType.INFO']}">
                <p:commandButton value="#{msgs['button.close']}"   oncomplete="PF('confirmDialogError').hide();"  type="submit"  immediate="false" ajax="false" />
            </p:confirmDialog>
            <p:confirmDialog id="confirmDialogAddMutation" widgetVar="confirmDialogAddMutation" message="#{transactionFormBean.infoWindow}" header="#{msgs['commons.MessageDialogType.INFO']}">
                <p:commandButton value="#{msgs['button.yes']}"   oncomplete="PF('confirmDialogAddMutation').hide();"  type="submit"  immediate="false" ajax="false" action="#{transactionFormBean.addMutationStep2()}" />
                <p:commandButton value="#{msgs['button.no']}" onclick="PF('confirmDialogAddMutation').hide();" immediate="true"/>
            </p:confirmDialog>
            <p:confirmDialog id="confirmDialogAddValuation" widgetVar="confirmDialogAddValuation" 
                             message="#{transactionFormBean.infoWindow}" 
                             header="#{msgs['commons.MessageDialogType.INFO']}">
                <p:commandButton value="#{msgs['button.yes']}" 
                                 oncomplete="PF('confirmDialogAddValuation').hide();"  
                                 type="submit"  immediate="false" ajax="false" 
                                 action="#{transactionFormBean.addValuationStep2()}" />
                <p:commandButton value="#{msgs['button.no']}" 
                                 onclick="PF('confirmDialogAddValuation').hide();" 
                                 immediate="true"/>
            </p:confirmDialog>


        </h:form>
        <h:form id="form2">
            <p:confirmDialog id="confirmDialogIncomplete" widgetVar="confirmDialogIncomplete" message="#{msgs['register.form.confirmNotCompletedForm']}" header="#{msgs['button.save']}">
                <div class="ui-messages-error-EMIR">
                    <p:messages autoUpdate="true" showSummary="false" showDetail="true" severity="info"/>
                </div>
                <p:messages autoUpdate="true" showSummary="false" showDetail="true" severity="warn"/>
                <p:commandButton value="#{msgs['button.save']}" oncomplete="PF('confirmDialogIncomplete').hide();"  type="submit"  immediate="true" ajax="true" action="#{transactionFormBean.saveStep2()}"/>
                <p:commandButton value="#{msgs['button.cancel']}" onclick="PF('confirmDialogIncomplete').hide();" type="button" update="form1:tv"/>
            </p:confirmDialog>
            <p:confirmDialog id="confirmDialogOk" widgetVar="confirmDialogOk" message="#{msgs['register.transaction.saved.title']}" header="#{msgs['button.save']}">
                <p:commandButton value="#{msgs['button.save']}" oncomplete="PF('confirmDialogOk').hide();"  type="submit"  immediate="true" ajax="true" action="#{transactionFormBean.saveStep2()}"/>
                <p:commandButton value="#{msgs['button.cancel']}" onclick="PF('confirmDialogOk').hide();" type="button" update="form1:tv"/>
            </p:confirmDialog>
            <p:confirmDialog id="confirmDialogCancel" widgetVar="confirmDialogCancel" message="#{msgs['register.form.confirmCancelForm']}" header="#{msgs['button.cancel']}">
                <p:commandButton value="#{msgs['button.yes']}"   oncomplete="PF('confirmDialogCancel').hide();"  type="submit"  immediate="false" ajax="false" action="#{transactionListBean.getAction()}" />
                <p:commandButton value="#{msgs['button.no']}" onclick="PF('confirmDialogCancel').hide();" immediate="true"/>
            </p:confirmDialog>
        </h:form>
    </ui:define>
</ui:composition>
